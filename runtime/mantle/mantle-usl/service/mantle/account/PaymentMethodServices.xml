<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.3.xsd">

<!-- STATUS: EXPERIMENTAL -->

    <service verb="get" noun="PartyCreditCardInfo">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="paymentMethodId"/>
            <parameter name="paymentMethod" type="org.moqui.entity.EntityValue"/>
            <parameter name="creditCard" type="org.moqui.entity.EntityValue"/>
            <parameter name="creditCardTypeEnum" type="org.moqui.entity.EntityValue"/>
            <parameter name="postalContactMechId"/>
            <parameter name="postalAddress" type="org.moqui.entity.EntityValue"/>
            <parameter name="postalAddressStateGeo" type="org.moqui.entity.EntityValue"/>
            <parameter name="telecomContactMechId"/>
            <parameter name="telecomNumber" type="org.moqui.entity.EntityValue"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="PaymentMethod" list="paymentMethodList">
                <date-filter/>
                <econdition field-name="ownerPartyId" from="partyId"/>
                <econdition field-name="paymentMethodTypeEnumId" value="PmtCreditCard"/>
                <order-by field-name="-fromDate"/><!-- get the most recent one if there is more than one -->
            </entity-find>
            <set field="paymentMethod" from="paymentMethodList.getAt(0)"/>
            <set field="paymentMethodId" from="paymentMethod?.paymentMethodId"/>

            <entity-find-related-one value-field="paymentMethod" relationship-name="CreditCard" to-value-field="creditCard"/>
            <entity-find-related-one value-field="creditCard" relationship-name="CreditCardType#moqui.basic.Enumeration" to-value-field="creditCardTypeEnum"/>

            <set field="postalContactMechId" from="paymentMethod?.postalContactMechId"/>
            <entity-find-related-one value-field="paymentMethod" relationship-name="PostalAddress" to-value-field="postalAddress"/>
            <entity-find-related-one value-field="postalAddress" relationship-name="StateProvince#moqui.basic.Geo" to-value-field="postalAddressStateGeo"/>
            <set field="telecomContactMechId" from="paymentMethod?.telecomContactMechId"/>
            <entity-find-related-one value-field="paymentMethod" relationship-name="TelecomNumber" to-value-field="telecomNumber"/>
        </actions>
    </service>

    <!-- CreditCard Services -->
    <service verb="create" noun="CreditCard">
        <description>
            Create a Credit Card (and the corresponding PaymentMethod record).
        </description>
        <in-parameters>
            <auto-parameters entity-name="CreditCard" include="nonpk"/>
            <parameter name="expireDate" required="true"><time-range after="now" format="MM/yyyy"/></parameter>
            <parameter name="cardNumber" required="true"><credit-card/></parameter>

            <!-- some fields from PaymentMethod we'll allow setting manually -->
            <parameter name="ownerPartyId"/>
            <parameter name="description"/>
            <parameter name="postalContactMechId"/>
            <parameter name="telecomContactMechId"/>
            <parameter name="trustLevelEnumId"/>
            <parameter name="paymentFraudEvidenceId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="paymentMethodId" required="true"/>
        </out-parameters>
        <actions>
            <set field="ownerPartyId" from="ownerPartyId ?: ec.user.userAccount.partyId"/>

            <entity-make-value entity-name="PaymentMethod" value-field="paymentMethod"/>
            <entity-set value-field="paymentMethod" include="nonpk"/>
            <entity-sequenced-id-primary value-field="paymentMethod"/>
            <set field="paymentMethod.fromDate" from="ec.user.nowTimestamp"/>
            <set field="paymentMethod.paymentMethodTypeEnumId" value="PmtCreditCard"/>
            <entity-create value-field="paymentMethod"/>

            <entity-make-value entity-name="CreditCard" value-field="creditCard"/>
            <set field="creditCard.paymentMethodId" from="paymentMethod.paymentMethodId"/>
            <entity-set value-field="creditCard" include="nonpk"/>
            <entity-create value-field="creditCard"/>

            <set field="result.paymentMethodId" from="paymentMethod.paymentMethodId"/>
        </actions>
    </service>
    <service verb="update" noun="CreditCard">
        <description>
            Update a Credit Card for a Party. CreditCard is immutable, so this creates a new one and associates
            it with the Party, expiring the old one (if there are any changes).

            NOTE: if you want to update the PaymentMethod.paymentFraudEvidenceId or .trustLevelEnumId fields, do so
            directly on the PaymentMethod entity (do not use this service).
        </description>
        <in-parameters>
            <auto-parameters entity-name="CreditCard" include="nonpk"/>

            <parameter name="paymentMethodId" required="true"/>

            <!-- some fields from PaymentMethod we'll allow setting manually -->
            <parameter name="ownerPartyId"/>
            <parameter name="description"/>
            <parameter name="postalContactMechId"/>
            <parameter name="telecomContactMechId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="paymentMethodId" required="true"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="CreditCard" value-field="origCreditCard"/>
            <script>newCreditCard = origCreditCard.cloneValue()</script>
            <entity-set value-field="newCreditCard" include="nonpk"/>

            <entity-find-one entity-name="PaymentMethod" value-field="origPaymentMethod"/>
            <script>newPaymentMethod = origPaymentMethod.cloneValue()</script>
            <entity-set value-field="newPaymentMethod" include="nonpk"/>

            <if condition="newCreditCard == origCreditCard &amp;&amp; newPaymentMethod == origPaymentMethod">
                <log level="info" message="No fields were different for Credit Card with ID [${paymentMethodId}], not updating."/>
                <return error="false"/>
            </if>

            <!-- expire the old record -->
            <set field="origPaymentMethod.thruDate" from="ec.user.nowTimestamp"/>
            <entity-update value-field="origPaymentMethod"/>

            <!-- create the new records -->
            <set field="newPaymentMethod.paymentMethodId" from="null"/>
            <entity-sequenced-id-primary value-field="newPaymentMethod"/>
            <set field="newPaymentMethod.fromDate" from="ec.user.nowTimestamp"/>
            <entity-create value-field="newPaymentMethod"/>

            <set field="newCreditCard.paymentMethodId" from="newPaymentMethod.paymentMethodId"/>
            <entity-create value-field="newCreditCard"/>

            <set field="result.paymentMethodId" from="newPaymentMethod.paymentMethodId"/>
        </actions>
    </service>
</services>
