<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.3.xsd">
    <service verb="get" noun="WikiPageInfoById">
        <in-parameters><parameter name="wikiPageId"/></in-parameters>
        <out-parameters>
            <parameter name="wikiSpaceId"/>
            <parameter name="pagePath"/>
            <parameter name="wikiSpace" type="org.moqui.entity.EntityValue"/>
            <parameter name="pageReference" type="org.moqui.content.ResourceReference"/>
            <parameter name="attachmentList" type="List"/>
            <parameter name="pageLocation"/>
            <parameter name="pageName"/>
            <parameter name="parentPath"/>
            <parameter name="breadcrumbMapList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="HiveMind.wiki.WikiPage" value-field="wikiPage"/>
            <set field="wikiSpaceId" from="wikiPage.wikiSpaceId"/>
            <set field="pagePath" from="wikiPage.pagePath"/>
            <service-call name="HiveMind.WikiServices.get#WikiPageInfo" in-map="context" out-map="context"/>
        </actions>
    </service>
    <service verb="get" noun="WikiPageId">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
            <parameter name="pagePath"/><!-- not required because for root page will be empty -->
            <parameter name="createIfMissing" type="Boolean" default-value="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="wikiPageId"/>
            <parameter name="wikiPage" type="org.moqui.entity.EntityValue"/>
            <parameter name="createdRecord" type="Boolean"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="HiveMind.wiki.WikiPage" list="wikiPageList" cache="true">
                <econdition-object field="[wikiSpaceId:wikiSpaceId, pagePath:(pagePath ?: null)]"/>
            </entity-find>
            <set field="wikiPage" from="wikiPageList?.getAt(0)"/>
            <!--
            <entity-find-one entity-name="HiveMind.wiki.WikiPage" value-field="wikiPage" cache="true">
                <field-map field-name="wikiSpaceId"/>
                <field-map field-name="pagePath" from="pagePath ?: null"/>
            </entity-find-one>
            -->

            <if condition="!wikiPage &amp;&amp; createIfMissing">
                <!-- no WikiPage record, create one for this page -->
                <service-call name="create#HiveMind.wiki.WikiPage" out-map="context"
                        in-map="[wikiSpaceId:wikiSpaceId, pagePath:(pagePath ?: null), createdByUserId:ec.user.userId]"/>
                <entity-find-one entity-name="HiveMind.wiki.WikiPage" value-field="wikiPage" cache="false"/>
                <set field="createdRecord" from="true"/>

                <else>
                    <set field="createdRecord" from="false"/>
                </else>
            </if>
            <set field="wikiPageId" from="wikiPage?.wikiPageId"/>
        </actions>
    </service>
    <service verb="get" noun="WikiPageInfo">
        <in-parameters>
            <parameter name="wikiSpaceId"/>
            <parameter name="pagePath"/>
            <parameter name="extraPathNameList" type="List"/>
        </in-parameters>
        <out-parameters>
            <parameter name="wikiSpaceId"/>
            <parameter name="wikiPageId"/>
            <parameter name="pagePath"/>
            <parameter name="wikiSpace" type="org.moqui.entity.EntityValue"/>
            <parameter name="pageReference" type="org.moqui.content.ResourceReference"/>
            <parameter name="attachmentList" type="List"/>
            <parameter name="pageLocation"/>
            <parameter name="pageName"/>
            <parameter name="parentPath"/>
            <parameter name="breadcrumbMapList" type="List"/>
        </out-parameters>
        <actions>
            <if condition="extraPathNameList">
                <set field="wikiSpaceId" from="wikiSpaceId ?: extraPathNameList[0]"/>
                <if condition="!pagePath &amp;&amp; extraPathNameList.size > 1">
                    <iterate list="extraPathNameList[1..extraPathNameList.size-1]" entry="pathName">
                        <if condition="pagePath"><set field="pagePath" from="pagePath + '/'"/></if>
                        <set field="pagePath" from="(pagePath?:'') + pathName"/>
                    </iterate>
                </if>
            </if>

            <if condition="!wikiSpaceId"><return error="true" message="Cannot get wiki page info without wikiSpaceId parameter or URL path element"/></if>

            <entity-find-one entity-name="HiveMind.wiki.WikiSpace" value-field="wikiSpace" cache="true"/>
            <!-- NOTE: WikiPage record may not exist, but don't create one on get/view only -->
            <service-call name="HiveMind.WikiServices.get#WikiPageId" in-map="context" out-map="context"/>

            <!-- check restrictView for space and page -->
            <if condition="wikiSpace.restrictView == 'Y'">
                <entity-find entity-name="HiveMind.wiki.WikiSpaceUser" list="wsuList">
                    <econdition-object field="[wikiSpaceId:wikiSpaceId, userId:ec.user.userId, allowView:'Y']"/>
                </entity-find>
                <if condition="!wsuList">
                    <return error="true" message="Wiki Space [${wikiSpaceId}] has restricted view and user ${ec.user.username} [${ec.user.userId}] is not allowed."/>
                </if>
            </if>
            <if condition="wikiPage &amp;&amp; wikiPage.restrictView == 'Y'">
                <entity-find entity-name="HiveMind.wiki.WikiPageUser" list="wpuList">
                    <econdition-object field="[wikiPageId:wikiPageId, userId:ec.user.userId, allowView:'Y']"/>
                </entity-find>
                <if condition="!wpuList">
                    <return error="true" message="Wiki Page [${wikiSpaceId}/${pagePath}] has restricted view and user ${ec.user.username} [${ec.user.userId}] is not allowed."/>
                </if>
            </if>

            <!-- get the ResourceReferences -->
            <set field="rootPageRef" from="ec.resource.getLocationReference(wikiSpace.rootPageLocation)"/>
            <set field="pageReference" from="rootPageRef.findChildFile(pagePath)"/>
            <set field="pageLocation" from="pageReference?.location"/>

            <set field="pageName" from="pageReference?.fileName"/>
            <if condition="pageName &amp;&amp; pageName.contains('.')">
                <set field="pageName" from="pageName.substring(0, pageName.indexOf('.'))"/>
            </if>

            <set field="pathForParentPath" from="pageReference.getActualChildPath() ?: pagePath"/>
            <set field="parentPath" from="pathForParentPath?.contains('/') ? pathForParentPath.substring(0, pathForParentPath.lastIndexOf('/')) : ''"/>

            <script><![CDATA[
                breadcrumbMapList = []
                List<String> parentPathList = parentPath.split('/')

                int listIndex = 0
                for (String parentPathName in parentPathList) {
                    if (!parentPathName) continue
                    String curPath = ""
                    for (int i = 0; i <= listIndex; i++) {
                        if (curPath) curPath += "/"
                        curPath += parentPathList[i]
                    }

                    breadcrumbMapList.add([pageName:parentPathName, pagePath:curPath])
                    listIndex++
                }
            ]]></script>

            <set field="pageAttachmentsDirectoryRef" from="pageReference?.getChild('_attachments')"/>
            <set field="pageAttachmentRefList" from="pageAttachmentsDirectoryRef?.getDirectoryEntries()"/>
            <set field="attachmentList" from="[]"/>
            <iterate list="pageAttachmentRefList" entry="pageAttachmentRef">
                <script>
                    if (pageAttachmentRef.isFile()) attachmentList.add([filename:pageAttachmentRef.getFileName(),
                            contentType:pageAttachmentRef.getContentType(), lastModified:pageAttachmentRef.getLastModified()])
                </script>
            </iterate>

            <!-- <log level="warn" message="========= wikiSpaceId=${wikiSpaceId}, pagePath: ${pagePath}, wikiSpace: ${wikiSpace}, rootPageRef: ${rootPageRef}, pageReference: ${pageReference}, pageLocation: ${pageLocation}"/> -->
        </actions>
    </service>
    <service verb="get" noun="WikiPageAttachment">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
            <parameter name="pagePath"><description>This is not required because it could be empty for the space root page.</description></parameter>
            <parameter name="filename" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="attachmentReference" type="org.moqui.content.ResourceReference"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="WikiSpace" value-field="wikiSpace" cache="true"/>
            <set field="rootPageRef" from="ec.resource.getLocationReference(wikiSpace.rootPageLocation)"/>
            <set field="pageReference" from="rootPageRef.findChildFile(pagePath)"/>
            <set field="pageAttachmentsDirectoryRef" from="pageReference?.getChild('_attachments')"/>
            <set field="attachmentReference" from="pageAttachmentsDirectoryRef?.getChild(filename)"/>
        </actions>
    </service>

    <service verb="update" noun="WikiPage">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
            <parameter name="pagePath" default-value="${parentPath ? parentPath+'/' : ''}${pageName?:''}"/>
            <parameter name="parentPath"/>
            <parameter name="pageName"/>
            <parameter name="wikiType" default-value="cwiki"/>
            <parameter name="pageText"/>
        </in-parameters>
        <out-parameters>
            <parameter name="pagePath"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="HiveMind.wiki.WikiSpace" value-field="wikiSpace" cache="true"/>
            <service-call name="HiveMind.WikiServices.get#WikiPageId" in-map="context + [createIfMissing:true]" out-map="context"/>

            <!-- check restrictUpdate for space and page -->
            <if condition="wikiSpace.restrictUpdate == 'Y'">
                <entity-find entity-name="HiveMind.wiki.WikiSpaceUser" list="wsuList">
                    <econdition-object field="[wikiSpaceId:wikiSpaceId, userId:ec.user.userId, allowUpdate:'Y']"/>
                </entity-find>
                <if condition="!wsuList">
                    <return error="true" message="Wiki Space [${wikiSpaceId}] has restricted update and user ${ec.user.username} [${ec.user.userId}] is not allowed."/>
                </if>
            </if>
            <if condition="wikiPage.restrictUpdate == 'Y'">
                <entity-find entity-name="HiveMind.wiki.WikiPageUser" list="wpuList">
                    <econdition-object field="[wikiPageId:wikiPageId, userId:ec.user.userId, allowUpdate:'Y']"/>
                </entity-find>
                <if condition="!wpuList">
                    <return error="true" message="Wiki Page [${wikiSpaceId}/${pagePath}] has restricted update and user ${ec.user.username} [${ec.user.userId}] is not allowed."/>
                </if>
            </if>

            <set field="rootPageRef" from="ec.resource.getLocationReference(wikiSpace.rootPageLocation)"/>
            <set field="pageReference" from="rootPageRef.findChildFile(pagePath)"/>

            <if condition="!pageReference.exists">
                <set field="fullPagePath" value="${pagePath}.${wikiType}"/>
                <set field="pageReference" from="rootPageRef.findChildFile(fullPagePath)"/>
                <!-- <log level="warn" message="========== new page fullPagePath=${fullPagePath}, pageReference=${pageReference}"/> -->
            </if>

            <!-- do the update, then the move if applicable -->
            <script>pageReference.putText(pageText)</script>

            <set field="wikiPageHistoryMap" from="[wikiPageId:wikiPageId, userId:ec.user.userId, changeDateTime:ec.user.nowTimestamp]"/>

            <!-- move the page if applicable -->
            <set field="origParentPath" from="pagePath.contains('/') ? pagePath.substring(0, pagePath.indexOf('/')) : ''"/>
            <set field="origPageName" from="pagePath.contains('/') ? pagePath.substring(pagePath.indexOf('/')+1) : pagePath"/>
            <!-- TODO: support change of wikiType too -->
            <if condition="pageName &amp;&amp; (origParentPath != parentPath || origPageName != pageName)">
                <!-- move the page file -->
                <set field="rootPageDirRef" from="rootPageRef.findMatchingDirectory()"/>
                <set field="newPageLocation" value="${rootPageDirRef.location}/${parentPath}/${pageName}.${wikiType}"/>
                <script>pageReference.move(newPageLocation)</script>
                <!-- move the page's corresponding directory -->
                <set field="pageDirReference" from="pageReference.findMatchingDirectory()"/>
                <set field="newPageDirLocation" value="${rootPageDirRef.location}/${parentPath}/${pageName}"/>
                <script>pageDirReference.move(newPageDirLocation)</script>

                <!-- save the old path in the WikiPageHistory (before the pagePath is set to the new path) -->
                <set field="wikiPageHistoryMap.oldPagePath" from="pagePath"/>

                <!-- set the new pagePath (it is returned so the user is taken there) -->
                <set field="pagePath" value="${parentPath ? parentPath+'/' : ''}${pageName?:''}"/>
                
                <!-- save the new pagePath on the WikiPage record -->
                <set field="wikiPage.pagePath" from="pagePath"/>
                <entity-update value-field="wikiPage"/>
            </if>

            <service-call name="create#HiveMind.wiki.WikiPageHistory" in-map="wikiPageHistoryMap"/>
        </actions>
    </service>

    <service verb="get" noun="WikiPageManualDocumentData" authenticate="anonymous-view">
        <implements service="org.moqui.EntityServices.add#ManualDocumentData"/>
        <actions>
            <!-- primaryEntityValue is a WikiPage entity value -->
            <set field="wikiPageMap" from="document.get('WikiPage')"/>
            <set field="pagePath" from="wikiPageMap.pagePath"/>
            <service-call name="HiveMind.WikiServices.get#WikiPageInfo" out-map="wikiPageInfo"
                    in-map="[wikiSpaceId:wikiPageMap.wikiSpaceId, pagePath:pagePath]"/>
            <set field="baseLinkUrl" value="/apps/hm/wiki/${wikiPageMap.wikiSpaceId}"/>
            <!-- TODO: add attachments too (for indexing)? -->
            <set field="document.content" from="ec.resource.getLocationText(wikiPageInfo.pageLocation, false)"/>
        </actions>
    </service>

    <service verb="create" noun="WikiSpace">
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="wikiSpaceId"><text-letters/><text-length min="3" max="8"/></parameter>
            <parameter name="rootPageDirectory" default-value="runtime/WikiSpace"/>
            <parameter name="wikiType" default-value="cwiki"/>
        </in-parameters>
        <out-parameters>
            <parameter name="wikiSpaceId" required="true"/>
        </out-parameters>
        <actions>
            <if condition="!rootPageLocation">
                <set field="rootPageLocation" value="${rootPageDirectory}/${wikiSpaceId}.${wikiType}"/>
            </if>

            <!-- create the record -->
            <service-call name="create#WikiSpace" in-map="context" out-map="context"/>

            <!-- create a root page if no file exists at the given location -->
            <set field="rootPageReference" from="ec.resource.getLocationReference(rootPageLocation)"/>
            <if condition="!rootPageReference.exists">
                <script>rootPageReference.putText("\nh2. Automatic root page for space ${description?:wikiSpaceId}\n\n")</script>
            </if>
        </actions>
    </service>
    <service verb="get" noun="WikiSpacePages">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="allChildFileFlatList"/>
            <parameter name="rootChildResourceList"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="WikiSpace" value-field="wikiSpace" cache="true"/>
            <set field="rootPageRef" from="ec.resource.getLocationReference(wikiSpace.rootPageLocation)"/>
            <set field="rootPageDirRef" from="rootPageRef.findMatchingDirectory()"/>
            <!-- walk the entire tree of pages under the space root and add them to the flat list and the tree of pages -->
            <set field="allChildFileFlatList" from="[[path:'', name:'Root Page', location:rootPageRef.getLocation()]]"/>
            <set field="rootChildResourceList" from="[]"/>
            <script>rootPageDirRef.walkChildTree(allChildFileFlatList, rootChildResourceList)</script>

            <!-- <iterate list="allChildFileFlatList" entry="allChildFileFlat">
                <log level="warn" message="============= allChildFileFlat=${allChildFileFlat}"/>
            </iterate>
            <log level="warn" message="============= rootChildResourceList=${rootChildResourceList}"/> -->
        </actions>
    </service>
    <service verb="index" noun="WikiSpacePages">
        <description>Find all pages in space, make sure each has a WikiPage record, and index the page for searching.</description>
        <in-parameters><parameter name="wikiSpaceId"/></in-parameters>
        <actions>
            <service-call name="HiveMind.WikiServices.get#WikiSpacePages" in-map="[wikiSpaceId:wikiSpaceId]" out-map="context"/>

            <set field="recordsCreated" from="0"/>
            <set field="documentList" from="[]"/>
            <iterate list="allChildFileFlatList" entry="allChildFileFlat">
                <service-call name="HiveMind.WikiServices.get#WikiPageId" out-map="getWpiResult"
                        in-map="[wikiSpaceId:wikiSpaceId, pagePath:allChildFileFlat.path, createIfMissing:true]"/>
                <if condition="getWpiResult.createdRecord"><set field="recordsCreated" from="recordsCreated + 1"/></if>

                <script>documentList.addAll(ec.entity.getDataDocuments("HmWikiPage",
                        ec.entity.conditionFactory.makeCondition([wikiPageId:getWpiResult.wikiPageId]), null, null))</script>
            </iterate>
            <script>ec.service.sync().name("org.moqui.impl.EntityServices", "index", "DataDocuments")
                    .parameters([documentList:documentList]).call()
            </script>

            <message>Found and indexed ${allChildFileFlatList.size()} pages in Wiki Space [${wikiSpaceId}], created DB records for ${recordsCreated}.</message>
        </actions>
    </service>

    <service verb="get" noun="UserWikiSpaces">
        <in-parameters><parameter name="userId"/></in-parameters>
        <out-parameters><parameter name="wikiSpaceAndUserList" type="List"/></out-parameters>
        <actions>
            <entity-find entity-name="HiveMind.wiki.WikiSpaceAndUser" list="wikiSpaceAndUserList">
                <econditions combine="or">
                    <econdition field-name="restrictView" value="N"/>
                    <econdition field-name="restrictView" from="null"/>
                    <econditions>
                        <econdition field-name="userId"/>
                        <econdition field-name="restrictView" value="Y"/>
                        <econditions combine="or">
                            <econdition field-name="allowAdmin" value="Y"/>
                            <econdition field-name="allowView" value="Y"/>
                        </econditions>
                    </econditions>
                </econditions>
            </entity-find>
        </actions>
    </service>
    <service verb="get" noun="UserSpaceWikiPages">
        <in-parameters>
            <parameter name="userId"/>
            <parameter name="wikiSpaceId"/>
        </in-parameters>
        <out-parameters><parameter name="wikiPageAndUserList" type="List"/></out-parameters>
        <actions>
            <entity-find entity-name="HiveMind.wiki.WikiPageAndUser" list="wikiPageAndUserList">
                <econdition field-name="wikiSpaceId"/>
                <econditions combine="or">
                    <econdition field-name="restrictView" value="N"/>
                    <econdition field-name="restrictView" from="null"/>
                    <econditions>
                        <econdition field-name="userId"/>
                        <econdition field-name="restrictView" value="Y"/>
                        <econdition field-name="allowView" value="Y"/>
                    </econditions>
                </econditions>
            </entity-find>
        </actions>
    </service>
    <service verb="get" noun="UserSpaceWikiPageSimpleList">
        <in-parameters>
            <parameter name="userId"/>
            <parameter name="wikiSpaceId"/>
        </in-parameters>
        <out-parameters><parameter name="resultList" type="List"/></out-parameters>
        <actions>
            <service-call name="HiveMind.WikiServices.get#UserSpaceWikiPages" in-map="context" out-map="context"/>
            <script>
                resultList = []
                for (def wikiPageAndUser in wikiPageAndUserList)
                    resultList.add([wikiPageId:wikiPageAndUser.wikiPageId, pageLabel:"${wikiPageAndUser.wikiSpaceId}/${wikiPageAndUser.pagePath}"])
            </script>
        </actions>
    </service>
</services>
